# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.33.0"

default_platform :ios

def get_properties(app, scheme) 
    if app == "master"
      provisioning_profile = "cz.quanti.BLE-Lock-Master"
      xcode_scheme = "BLE_Lock_Master"
      app_id = "cz.quanti.BLE-Lock-Master"
    else
      provisioning_profile = "cz.quanti.BLE-Lock-Peripheral"
      xcode_scheme = "BLE_Lock_Peripheral"
      app_id = "cz.quanti.BLE-Lock-Peripheral"
    end

    if scheme == "adhoc"
      export_method = "ad-hoc"
      provisioning = "match Development " + provisioning_profile
    elsif scheme == "appstore"
      export_method = "app-store"
      provisioning = "match AppStore " + provisioning_profile
    else
      export_method = "development"
      provisioning = "match Development " + provisioning_profile
    end

    return { 
      "provisioning_profile": provisioning_profile, 
      "xcode_scheme": xcode_scheme,
      "export_method": export_method,
      "provisioning": provisioning
    }
end

platform :ios do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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" # Webhook URL created in Slack
  end

  desc "Build aplication"
  lane :build_application do |options|
    
    properties = get_properties(options[:app], options[:scheme])

    provisioning_profile_dict = {}
    provisioning_profile_dict[properties[:provisioning_profile]] = properties[:provisioning]

    gym(
      export_method: properties[:export_method],
      scheme: properties[:xcode_scheme],
      clean: true,
      output_directory: "./build",
      # use_legacy_build_api: true,
      verbose: true,
      export_options: { provisioningProfiles: provisioning_profile_dict }
    ) 

  end

  lane :upload_crashlytics do |options|

    properties = get_properties(options[:app], options[:scheme])

    crashlytics(
      crashlytics_path: './Crashlytics.framework', # path to your 'Crashlytics.framework'
      api_token: '95f39747d5544e8f30d7cbd0cc36e6781b3a12e0',
      build_secret: '19a52fa2c06115d9d30de2244ba443a0914d2969a1591f0008a6afb8136f241d',
      groups: 'quanti-ios-testers, ios-testers',
      ipa_path: "./build/" + properties[:xcode_scheme] + ".ipa",
      notes: "Application succesfully uploaded to crashlytics \n" + %x[git log --oneline --since `date -v -1d +%d.%m.%Y`]
    )

    slack(
       message: properties[:xcode_scheme] + " successfully deployed new App Update."
    )
  end

  desc "Deploy application to pilot"
  lane :deploy_pilot do |options|

    properties = get_properties(options[:app], options[:scheme])

    pilot(
      distribute_external: true,
      app_identifier: properties[:app_id],
      ipa: "./build/" + properties[:xcode_scheme] + ".ipa",
      team_id: "2005235",
      verbose: true,
      changelog: "Testovaci build pro externi testery",
      first_name: "Jakub",
      last_name: "Prusa",
      email: "ios+contacts@quanti.cz"
      )

    post_to_slack place:"Apple Testflight"
    
  end

  lane :update_profiles do

    ["development", "adhoc", "appstore"].each do |type|
      ["cz.quanti.BLE-Lock-Master", "cz.quanti.BLE-Lock-Peripheral"].each do |app|
        match(
          app_identifier: app,
          type: type,
          readonly: false
        )
      end
    end
  end

  error do |lane, exception|
    slack(
      message: exception.message,
      success: false
    )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
